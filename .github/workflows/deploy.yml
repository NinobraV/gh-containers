# The idea behind is we run our jobs inside a docker containers.
# note that in most cases, we run the jobs inside ubuntu-latest machine provided by Github and nothing wrong with it

# all the steps of job would be the same result, instead of running job directly on ubuntu-latest machine, we run on docker container.
name: Deployment (Container)
on:
  push:
    branches:
      - main
      - dev
env:
  CACHE_KEY: node-deps
  MONGODB_DB_NAME: gha-demo
jobs:
  test:
    environment: testing
    runs-on: ubuntu-latest # this runner machine will host the docker image
    # and the steps running in the image will not have direct access to the machine, and not have direct access to a tool that made available by that machine
    container:  # to define the value for "container" key, you need to specify the name of the image which you want to use. (this case, image name is "node:16")
      image: node:16
    env:
      MONGODB_CONNECTION_PROTOCOL: mongodb
      MONGODB_CLUSTER_ADDRESS: mongodb # this is the name "mongodb" in services
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: example
      PORT: 8080
    services: 
      mongodb: # the name here is totally up to you
        image: mongo
        env: 
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: example
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY }}-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT # requires MongoDB Atlas to accept requests from anywhere!
      - name: Run tests
        run: npm test
      - name: Output information
        run: |
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        env:
          PORT: 3000
        run: |        
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"
